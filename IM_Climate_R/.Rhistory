install.packages("devtools")
install.packages("roxygen2")
library(devtools)
install_github("devtools", "hadley")
load_all()
load_all()
library(devtools)
load_all()
install_github("devtools", "hadley/devtools")
install_github("devtools", "hadley/devtools/devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
load_all()
remove.packages("devtools")
install.packages("devtools")
library(devtools)
load_all()
load_all("./")
load_all("./")
load_all()
load_all()
load_all("./")
load_all("../")
load_all("./")
load_all()
load_all()
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
install.packages("devtools")
install.packages("roxygen2")
library(devtools)
library(IMClimateR)
install.packages("Rtools")
install.packages("roxygen2")
install.packages("Rtools")
library(IMClimateR)
install.packages("devtools","3.2.5")
install.packages("Rtools","3.2.5")
install.packages("Rtools","3.2.4")
find_rtools()
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
library(IMClimateR)
findstation("NOCA")
findStation(NOCA)
findStation(c("NOCA")
)
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
library(IMClimateR)
findStation(c("NOCA"))
findStation(c("ROMO"))
findStation(c("ABLI"))
library(IMClimateR)
findStation(c("ABLI"))
library(IMClimateR)
library(IMClimateR)
findStation(c("ABLI"))
library(IMClimateR)
findStation(c("ABLI"))
library(IMClimateR)
findStation(c("ABLI"))
library(IMClimateR)
findStation(c("ABLI"))
library(IMClimateR)
findStation(c("ROMO"))
library(IMClimateR)
findStation(c("ROMO"))
library(IMClimateR)
findStation(c("ROMO"))
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
findStation("FOLA")
function (x, ...)
# Counter-clockwise vertices (as WKT): LL, LR, UR, UL
bboxWKT <- parsed_content(GET(bboxURL, confg), as = "parsed")
#bboxWKT <- strsplit((content(GET(bboxURL, confg))),".")
# Extract vertices and 'buffer' by 0.3 degrees (~33 km)
#LL <- bboxWKT
#RL <- bboxWKT
return (bboxWKT)
# Use bounding box to request station list
bboxWKT
library(IMClimateR)
findStation("FOLA")
tt  <- findStation("FOLA")
tt
dd  <- fromJSON(tt)
typeof(tt)
tt$Geography
tt.Geography
head(tt)
tt(Geography)
tt
tt("Geography")
tt$Code
tt$1
tt[[1]]
tt[[1]]$Geography
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
tt  <- findStation("FOLA")
tt[1]
tt[1][1]
tt[[1]]
tt[[1]][1]
tt[[1]][2]
tt[[1]][3]
gsub(" ",tt[[1]][3])
gsub(tt[[1]][3], " ")
gsub(" ","",tt[[1]][3])
substring(tt[[1]][3],2)
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
tt  <- findStation("FOLA")
lr  <- gsub("POLYGON ((", "", bboxWKT[[1]][1])
lr  <- gsub("POLYGON ((", "", tt)
lr  <- gsub("POLYGON \((", "", tt)
lr  <- gsub("POLYGON", "", tt)
lr
tt
lr  <- gsub("POLYGON ((", "", tt[[1]][1])
tt[[1]][1]
substring(tt[[1]][1], 2)
substring(tt[[1]][1], 11)
LR <- substring(tt[[1]][2], 2)
LR
UR  <- substring(tt[[1]][3], 2)
UR
UL  <- gsub("))","",substring(tt[[1]][4], 2))
UL
strsplit(substring(tt[[1]][1], 11), " ")
xx  <- strsplit(substring(tt[[1]][1], 11), " ")
xx
xx[[1]]
xx[[1]][1]
xx[[1]][2]
library(IMClimateR)
findStation("FOLA")
aa  <- findStation("FOLA")
aa
library(IMClimateR)
aa  <- findStation("FOLA")
aa
library(IMClimateR)
aa  <- findStation("FOLA")
aa
strsplit(substring(aa[[1]]$Geography[1], 11), " ")
strsplit(substring(aa[[1]][1]$Geography, 11), " ")
strsplit(substring(aa$Geography[[1]][1], 11), " ")
ff  <- strsplit(substring(aa$Geography[[1]][1], 11), " ")
ff
ff[[1]]
ff[1]
aa  <- findStation("FOLA")
aa
library(IMClimateR)
aa  <- findStation("FOLA")
aa
library(IMClimateR)
library(IMClimateR)
aa  <- findStation("FOLA")
aa
library(IMClimateR)
aa  <- findStation("FOLA")
aa
return (LR)
library(IMClimateR)
aa  <- findStation("FOLA")
aa
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
aa  <- findStation("FOLA")
LL <- strsplit(substring(aa[[1]][1], 11), " ")
LR <- strsplit(substring(aa[[1]][2], 2), " ")
UR  <- strsplit(substring(aa[[1]][3], 2), " ")
UL  <- strsplit(gsub("))","",substring(aa[[1]][4], 2)), " ")
aa
LL
UL
as.numeric(LL[[1]][1])
as.numeric(LL[[1]][2])
bboxExpand  <- 0.33
as.numeric(LL[[1]][1]) - bboxExpand
as.numeric(LL[[1]][2]) - bboxExpand
LR
as.numeric(LR[[1]][1]) + bboxExpand
as.numeric(LR[[1]][2]) - bboxExpand
UR
as.numeric(UR[[1]][1]) + bboxExpand
as.numeric(UR[[1]][2]) + bboxExpand
UL
as.numeric(UL[[1]][1]) - bboxExpand
as.numeric(UL[[1]][2]) + bboxExpand
help(array)
library(IMClimateR)
findStation("FOLA")
d  <- findStation("FOLA")
d
strjoin(arrayfun(@(x) num2str(x),dd,'UniformOutput',false),',')
allOneString = sprintf('%.0f,' , n)
allOneString = sprintf('%.0f,' , dd)
allOneString = sprintf('%.0f,' , d)
allOneString
paste(d, collapse=", ")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
library(IMClimateR)
findStation("FOLA")
